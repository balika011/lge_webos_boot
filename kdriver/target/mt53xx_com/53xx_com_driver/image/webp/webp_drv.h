/********************************************************************************************
 *     LEGAL DISCLAIMER
 *
 *     (Header of MediaTek Software/Firmware Release or Documentation)
 *
 *     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 *     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED
 *     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS
 *     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED,
 *     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 *     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY
 *     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 *     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK
 *     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
 *     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION
 *     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
 *
 *     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH
 *     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION,
 *     TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE
 *     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 *     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS
 *     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.
 ************************************************************************************************/

#ifndef __WEBP_H
#define __WEBP_H

#include "x_common.h"
#include "x_img_dec.h"
#include "x_typedef.h"
#include "x_os.h"
#include "fbm_drvif.h"
#include "img_lib_if.h"
#include "vdec_vp8webp_if.h"

typedef void* WEBPHANDLE;

typedef struct
{
    WEBP_DECIN_PARAM_T  rInParam;
    WEBP_DECOUT_PARAM_T rOutParam;
}WEBP_INST_T;

EXTERN void* _WEBP_Init(UCHAR ucImgId,ENUM_IMG_BUFFER_TYPE eMemClass, void *pvTag);
EXTERN INT32 _WEBP_DecPrepare(WEBPHANDLE hCurImg, IMG_PARAM_T *prInfo);
EXTERN INT32 _WEBP_DecOneSegment(IMGHANDLE hCurImg, UINT32 u4ImgID,IMG_PARAM_T *prInfo);
EXTERN void _WEBP_SetFileSize(WEBPHANDLE hDec,UINT32 u4FileSize);
EXTERN void _WEBP_SetFillBsBufEnd(WEBPHANDLE hCurImg, UINT32 u4Entry1Size,
                          UINT32 u4Entry2Size, BOOL bIsEOF);
EXTERN INT32 _WEBP_MwFillBuffer(WEBPHANDLE hDec, void **ppvBuf,UINT32 *pu4Size, UINT32
                       u4AddSize);
EXTERN void _WEBP_FreeInstance(WEBPHANDLE hDec);
EXTERN ENUM_IMG_RET _WEBP_Stop(WEBPHANDLE hCurImg);
EXTERN INT32 _WEBP_CheckDecParam(WEBPHANDLE hCurImg, IMG_PARAM_T *prInfo);
EXTERN INT32 _WEBP_BsBufManager(WEBPHANDLE hCurImg, UINT32 u4ImgID);
EXTERN VOID _WEBP_GetDecInfo(WEBPHANDLE hDec,UINT32 u4GetType,UINT32 u4Param1,UINT32 u4Param2);
#ifdef CC_JPEG_FBM_DYNAMIC_MAPPING
void i4WEBPDynamicFbmMap(void);
void _WEBP_UnmapFbm(ENUM_IMG_BUFFER_TYPE eMemClass);
#endif

#endif // __WEBP_H
