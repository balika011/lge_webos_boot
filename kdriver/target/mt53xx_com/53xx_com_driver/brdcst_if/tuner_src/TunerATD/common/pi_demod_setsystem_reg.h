/*----------------------------------------------------------------------------*
 * Copyright Statement:                                                       *
 *                                                                            *
 *   This software/firmware and related documentation ("MediaTek Software")   *
 * are protected under international and related jurisdictions'copyright laws *
 * as unpublished works. The information contained herein is confidential and *
 * proprietary to MediaTek Inc. Without the prior written permission of       *
 * MediaTek Inc., any reproduction, modification, use or disclosure of        *
 * MediaTek Software, and information contained herein, in whole or in part,  *
 * shall be strictly prohibited.                                              *
 * MediaTek Inc. Copyright (C) 2010. All rights reserved.                     *
 *                                                                            *
 *   BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND     *
 * AGREES TO THE FOLLOWING:                                                   *
 *                                                                            *
 *   1)Any and all intellectual property rights (including without            *
 * limitation, patent, copyright, and trade secrets) in and to this           *
 * Software/firmware and related documentation ("MediaTek Software") shall    *
 * remain the exclusive property of MediaTek Inc. Any and all intellectual    *
 * property rights (including without limitation, patent, copyright, and      *
 * trade secrets) in and to any modifications and derivatives to MediaTek     *
 * Software, whoever made, shall also remain the exclusive property of        *
 * MediaTek Inc.  Nothing herein shall be construed as any transfer of any    *
 * title to any intellectual property right in MediaTek Software to Receiver. *
 *                                                                            *
 *   2)This MediaTek Software Receiver received from MediaTek Inc. and/or its *
 * representatives is provided to Receiver on an "AS IS" basis only.          *
 * MediaTek Inc. expressly disclaims all warranties, expressed or implied,    *
 * including but not limited to any implied warranties of merchantability,    *
 * non-infringement and fitness for a particular purpose and any warranties   *
 * arising out of course of performance, course of dealing or usage of trade. *
 * MediaTek Inc. does not provide any warranty whatsoever with respect to the *
 * software of any third party which may be used by, incorporated in, or      *
 * supplied with the MediaTek Software, and Receiver agrees to look only to   *
 * such third parties for any warranty claim relating thereto.  Receiver      *
 * expressly acknowledges that it is Receiver's sole responsibility to obtain *
 * from any third party all proper licenses contained in or delivered with    *
 * MediaTek Software.  MediaTek is not responsible for any MediaTek Software  *
 * releases made to Receiver's specifications or to conform to a particular   *
 * standard or open forum.                                                    *
 *                                                                            *
 *   3)Receiver further acknowledge that Receiver may, either presently       *
 * and/or in the future, instruct MediaTek Inc. to assist it in the           *
 * development and the implementation, in accordance with Receiver's designs, *
 * of certain softwares relating to Receiver's product(s) (the "Services").   *
 * Except as may be otherwise agreed to in writing, no warranties of any      *
 * kind, whether express or implied, are given by MediaTek Inc. with respect  *
 * to the Services provided, and the Services are provided on an "AS IS"      *
 * basis. Receiver further acknowledges that the Services may contain errors  *
 * that testing is important and it is solely responsible for fully testing   *
 * the Services and/or derivatives thereof before they are used, sublicensed  *
 * or distributed. Should there be any third party action brought against     *
 * MediaTek Inc. arising out of or relating to the Services, Receiver agree   *
 * to fully indemnify and hold MediaTek Inc. harmless.  If the parties        *
 * mutually agree to enter into or continue a business relationship or other  *
 * arrangement, the terms and conditions set forth herein shall remain        *
 * effective and, unless explicitly stated otherwise, shall prevail in the    *
 * event of a conflict in the terms in any agreements entered into between    *
 * the parties.                                                               *
 *                                                                            *
 *   4)Receiver's sole and exclusive remedy and MediaTek Inc.'s entire and    *
 * cumulative liability with respect to MediaTek Software released hereunder  *
 * will be, at MediaTek Inc.'s sole discretion, to replace or revise the      *
 * MediaTek Software at issue.                                                *
 *                                                                            *
 *   5)The transaction contemplated hereunder shall be construed in           *
 * accordance with the laws of Singapore, excluding its conflict of laws      *
 * principles.  Any disputes, controversies or claims arising thereof and     *
 * related thereto shall be settled via arbitration in Singapore, under the   *
 * then current rules of the International Chamber of Commerce (ICC).  The    *
 * arbitration shall be conducted in English. The awards of the arbitration   *
 * shall be final and binding upon both parties and shall be entered and      *
 * enforceable in any court of competent jurisdiction.                        *
 *---------------------------------------------------------------------------*/
#ifndef PI_DEMOD_SETSYSTEM_REG_H
#define PI_DEMOD_SETSYSTEM_REG_H

#include "pi_demod_atd.h"
#include "atd_feature.h"

ATD_REG_T ATD_SetSystem_Reg[] =
{ 
/* /////////////////////////////////////////////////
  Reg   B/G     D/K     I       L       L'      M/N'   
///////////////////////////////////////////////// */
#if   defined(CC_MT5365) || defined (CC_MT5395)
//0x125,  0x50,   0x50,   0x50,   0x50,   0x50,   0x50,//remove to avoid video flash when chanel scan
{0x126,  {0x09,   0x02,   0x09,   0x09,   0x09,   0x10}},
{0x130,  {0x33,   0x35,   0x34,   0x35,   0x35,   0x32}},
{0x13B,  {0xC0,   0xC0,   0xC0,   0xC1,   0xC1,   0xC0}},
{0x164,  {0x14,   0x14,   0x14,   0xD4,   0xD4,   0x04}},
{0x165,  {0x09,   0x09,   0x09,   0x4D,   0x4D,   0x09}},
{0x166,  {0x36,   0x36,   0x36,   0x01,   0x01,   0x36}},
{0x167,  {0x9D,   0x9D,   0x9D,   0xD4,   0xD4,   0x9D}},
{0x168,  {0x87,   0x87,   0x87,   0x87,   0x87,   0x87}},
{0x16C,  {0x20,   0x20,   0x20,   0x20,   0x20,   0x20}},
{0x173,  {0x12,   0x12,   0x12,   0x12,   0x12,   0x12}},
{0x174,  {0x55,   0x55,   0x55,   0x55,   0x55,   0x55}},
{0x17A,  {0xD2,   0xD2,   0xD2,   0x2D,   0x2D,   0xD2}},
{0x17C,  {0x68,   0x68,   0x68,   0x68,   0x68,   0x68}},
{0x17D,  {0x37,   0x37,   0x37,   0x37,   0x37,   0x37}},
{0x17E,  {0x7F,   0x7F,   0x7F,   0x7F,   0x7F,   0x7F}},
{0x180,  {0x08,   0x08,   0x08,   0xE8,   0xE8,   0x08}},
{0x183,  {0x20,   0x20,   0x20,   0x13,   0x13,   0x20}},
{0x184,  {0x9D,   0x9D,   0x9D,   0x80,   0x80,   0x9D}},
{0x18A,  {0x20,   0x20,   0x20,   0x37,   0x37,   0x20}},
{0x192,  {0x54,   0x54,   0x54,   0x3F,   0x3F,   0x54}},
{0x193,  {0x19,   0x19,   0x19,   0x19,   0x19,   0x19}},
{0x194,  {0x50,   0x50,   0x50,   0x51,   0x51,   0x50}},  // fine tune FN threshold for PTY_WHT_OVER_onlydata.50 @ 15.dat (Thailand, 200905)
{0x195,  {0x5F,   0x5F,   0x5F,   0x5F,   0x5F,   0x5F}},
{0x196,  {0xDF,   0xDF,   0xDF,   0xDF,   0xDF,   0xDF}},
{0x197,  {0xF9,   0xF9,   0xF9,   0xF9,   0xF9,   0xF9}},
{0x198,  {0x36,   0x36,   0x36,   0x36,   0x36,   0x36}},
{0x199,  {0x8C,   0x8C,   0x8C,   0x8C,   0x8C,   0x8C}},
{0x1A9,  {0x46,   0x46,   0x46,   0x46,   0x46,   0x46}},
{0x1AA,  {0xF8,   0xF8,   0xF8,   0xF8,   0xF8,   0xF8}},
{0x1B2,  {0x36,   0x36,   0x36,   0x36,   0x36,   0x36}},
{0x1B3,  {0x46,   0x46,   0x46,   0x46,   0x46,   0x46}},
{0x1B4,  {0x37,   0x37,   0x37,   0x27,   0x27,   0x37}},
{0x1B5,  {0x7C,   0x7C,   0x7C,   0x7C,   0x7C,   0x7C}},
{0x1B6,  {0x04,   0x04,   0x04,   0x84,   0x84,   0x04}},
{0x1B7,  {0x2C,   0x2C,   0x2C,   0xA0,   0xA0,   0x2C}},
//0x1B9,  0x1C,   0x1C,   0x1C,   0x1C,   0x1C,   0x1C, // set PN cnt in CR patch
{0x1BA,  {0x04,   0x04,   0x04,   0x06,   0x06,   0x04}},
{0x1BB,  {0x30,   0x30,   0x30,   0x30,   0x30,   0x30}},
{0x1C8,  {0x7F,   0x7F,   0x7F,   0x7F,   0x7F,   0x7F}},
{0x1C9,  {0x1F,   0x1F,   0x1F,   0x1F,   0x1F,   0x1F}},
{0x1CB,  {0x80,   0x80,   0x80,   0x80,   0x80,   0x80}},
{0x1CF,  {0x66,   0x66,   0x66,   0x66,   0x66,   0x66}},
{0x1D6,  {0x01,   0x01,   0x01,   0x01,   0x01,   0x01}}, //EC_code_d100825: Enable CR CFO compensation after enter FM radio mode
{0x1E1,  {0x67,   0x60,   0x67,   0x67,   0x67,   0x67}},
{0x209,  {0x67,   0x67,   0x67,   0x67,   0x22,   0x22}},
{0x20A,  {0x60,   0x60,   0x60,   0x60,   0x60,   0x60}},
{0x214,  {0x17,   0x17,   0x17,   0x14,   0x14,   0x17}},
{0x220,  {0x01,   0x00,   0x00,   0x00,   0x00,   0x00}},
{0x221,  {0xB0,   0x00,   0x00,   0x00,   0x00,   0x00}},
{0x234,  {0xA5,   0xA5,   0xA5,   0xA6,   0xA6,   0xA5}},
{0x235,  {0x12,   0x12,   0x12,   0x2D,   0x2D,   0x12}},
{0x237,  {0x00,   0x00,   0x00,   0x00,   0x00,   0x00}},
{0x238,  {0x00,   0x00,   0x00,   0x00,   0x00,   0x00}},
{0x23D,  {0x4F,   0x4F,   0x4F,   0x14,   0x14,   0x42}},
{0x244,  {0x42,   0x42,   0x42,   0x37,   0x37,   0x42}},
{0x245,  {0xDF,   0xDF,   0xDC,   0xDF,   0xDF,   0xDC}},
{0x248,  {0xC2,   0xC2,   0xC2,   0xB0,   0xB0,   0xC2}},
{0x24C,  {0xA3,   0xA3,   0xA3,   0xA3,   0xA3,   0xA3}},
{0x24D,  {0x80,   0x80,   0x80,   0x80,   0x80,   0x80}},
{0x254,  {0x0C,   0x0C,   0x0C,   0x0C,   0x0C,   0x0C}},
{0x255,  {0x36,   0x36,   0x36,   0x18,   0x18,   0x36}},
{0x25E,  {0x84,   0x84,   0x84,   0x04,   0x04,   0x84}},  
{0x270,  {0x99,   0x99,   0x99,   0x99,   0x99,   0x80}},
{0x274,  {0xcd,   0xcd,   0xcd,   0xcf,   0xcf,   0xcd}},
{0x275,  {0x62,   0x62,   0x62,   0xa2,   0xa2,   0x62}},
{0x277,  {0x42,   0x42,   0x42,   0x42,   0x42,   0x37}},
{0x282,  {0x10,   0x10,   0x10,   0x10,   0x10,   0x10}},
{0x283,  {0x20,   0x20,   0x20,   0x20,   0x20,   0x20}},
{0x287,  {0x1A,   0x1A,   0x1A,   0x20,   0x20,   0x1A}},//THC move from  pi_demod_atd_sawless.c
{0x290,  {0x48,   0x48,   0x48,   0xc8,   0xc8,   0x48}},
{0x291,  {0x40,   0x40,   0x40,   0x45,   0x45,   0x40}},
{0x293,  {0x04,   0x04,   0x04,   0x42,   0x42,   0x04}},
{0x294,  {0x48,   0x48,   0x48,   0x02,   0x02,   0x48}},
{0x297,  {0x22,   0x22,   0x22,   0x22,   0x22,   0x22}},
{0x29a,  {0x7a,   0x7a,   0x7a,   0x7a,   0x7a,   0x7a}},
{0x29c,  {0x21,   0x21,   0x21,   0x11,   0x11,   0x21}},
{0x29d,  {0x1c,   0x1c,   0x1c,   0x0a,   0x0a,   0x1c}},
{0x2a4,	 {0x48,	  0x48,	  0x48,	  0x01,	  0x01,	  0x48}},
{0x2a5,  {0xC0,   0xC0,   0xC0,   0x40,   0x40,   0xC0}},
{0x2b0,  {0x28,   0x28,   0x28,   0x28,   0x28,   0x28}},
{0x2b1,  {0x21,   0x21,   0x21,   0x10,   0x10,   0x21}},
{0x2b2,  {0x03,   0x03,   0x03,   0x87,   0x87,   0x03}},
{0x2b3,  {0x60,   0x60,   0x60,   0x00,   0x00,   0x60}},
{0x2b5,  {0x40,   0x40,   0x40,   0x40,   0x40,   0x40}},
{0x2b6,  {0x5D,   0x5D,   0x5D,   0x6D,   0x6D,   0x5D}},
{0x2b7,  {0x15,   0x15,   0x15,   0x10,   0x10,   0x15}},
{0x2b8,  {0x00,   0x00,   0x00,   0x00,   0x00,   0x00}},
{0x2b9,  {0x11,   0x11,   0x11,   0x0c,   0x0c,   0x11}},
{0x2bd,  {0x23,   0x23,   0x23,   0x2d,   0x2d,   0x23}},
{0x2be,  {0x19,   0x19,   0x19,   0x23,   0x23,   0x19}},
{0x2bf,  {0x14,   0x14,   0x14,   0x1e,   0x1e,   0x14}},
{0x2c0,  {0x7f,   0x7f,   0x7f,   0x7a,   0x7a,   0x7f}},
{0x2c2,  {0x21,   0x21,   0x21,   0x30,   0x30,   0x21}},
{0x2c3,  {0x34,   0x34,   0x34,   0x0a,   0x0a,   0x34}},
{0x2c9,  {0x23,   0x23,   0x23,   0x12,   0x12,   0x23}},
//0x2cb,  0x00,   0x00,   0x00,   0x10,   0x10,   0x00,//d100908,LW,sync
{0x2cb,	 {0x03,	  0x03,	  0x03,	 0x10,	  0x10,	  0x03}},
{0x2cc,  {0x14,   0x14,   0x14,   0x3f,   0x3f,   0x14}},
{0x2e1,  {0xD4,   0xD4,   0xD4,   0x34,   0x34,   0xD4}},
{0x2e3,  {0x6b,   0x6b,   0x6b,   0x20,   0x20,   0x6b}},
{0x2fb,  {0x05,   0x05,   0x05,   0x02,   0x02,   0x05}},
#elif defined(CC_MT5396)  || defined(CC_MT5368)  || defined(CC_MT5389) || defined(CC_MT5398) || defined(CC_MT5880) || defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
//Reg   B/G     D/K     I       L       L'      M/N'     
{0x126,  {0x09 ,   0x02 ,  0x09 ,  0x09 ,  0x09 ,0x10}},                                                                                               
{0x130,  {0x33 ,   0x35 ,  0x34 ,  0x35 ,  0x35 ,0x32}},  //                                                                    
{0x13B,  {0xC0 ,   0xC0 ,  0xC0 ,  0xC1 ,  0xC1 ,0xC0}},  //  //b7=1, b6=1, ECO VSB filter mode3
#if ATD_SUPPORT_H_BLANK_MODE//d110820_Haibo:Secam L/L1 H-blank mode
{0x164,  {0x14 ,   0x14 ,  0x14 ,  0x84 ,  0x84 ,0x04}},  //                                                                    
{0x165,  {0x89 ,   0x89 ,  0x89 ,  0x0C ,  0x0C ,0x89}},  
#if defined(CC_MT5398) || defined(CC_MT5880)
{0x166,  {0x38 ,   0x38 ,  0x38 ,  0x10 ,  0x10 ,0x38}},  //                                                                    
{0x167,  {0xd0 ,   0xa0 ,  0xab ,  0xec ,  0xec ,0x20}},  // 
#elif defined(CC_MT5881)  //d20121126_hongji:update remy DRO value from bo.xie
{0x166,  {0x2a ,   0x2a ,  0x2a ,  0x0d ,  0x0d ,0x2a}},                                                                    
{0x167,  {0xb8 ,   0xb8 ,  0xb8 ,  0xac ,  0xac ,0xb8}},  
#elif  defined(CC_MT5399) || defined(CC_MT5890)  || defined(CC_MT5882) //d20130722_steven:update Mustang ECO DRO value from qiang.fu
{0x166,  {0x34 ,   0x34 ,  0x34 ,  0x10 ,  0x10 ,0x33}},
{0x167,  {0x00 ,   0x00 ,  0x00 ,  0x49 ,  0x49 ,0xe0}},
#else
{0x166,  {0x36 ,   0x36 ,  0x36 ,  0x10 ,  0x10 ,0x37}},  //                                                                    
{0x167,  {0xe0 ,   0xe0 ,  0xe0 ,  0xa0 ,  0xa0 ,0x20}},  //  
#endif
#else
{0x164,  {0x14 ,   0x14 ,  0x14 ,  0xD4 ,  0xD4 ,0x04}},  //                                                                    
{0x165,  {0x89 ,   0x89 ,  0x89 ,  0xCD ,  0xCD ,0x89}},  //d110401_Haibo:Lw suggestion:SECAM from 0x8C to 0x4D                                                                     
{0x166,  {0x39 ,   0x39 ,  0x39 ,  0x01 ,  0x01 ,0x39}},  //                                                                    
{0x167,  {0x9D ,   0x9D ,  0x9D ,  0xD4 ,  0xD4 ,0x9D}},  //  
#endif
#ifdef ATD_DRO_BYPASS_FIFO
{0x168,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}},  //  bypass DRO fifo delay 
{0x169,  {0x00,    0x00 ,  0x00,   0x00,   0x00, 0x00}}, 
#else                                                              
{0x168,  {0x05 ,   0x05 ,  0x05 ,  0x05 ,  0x05 ,0x05}},  //  // DRO delay = 0      
{0x169,  {0x10,    0x10 ,  0x10,   0x10,   0x10, 0x07}}, 
#endif  
{0x16C,  {0x20 ,   0x20 ,  0x20 ,  0x20 ,  0x20 ,0x20}},  //                                                                    
{0x173,  {0x12 ,   0x12 ,  0x12 ,  0x12 ,  0x12 ,0x12}},  //                                                                    
{0x174,  {0x55 ,   0x55 ,  0x55 ,  0x55 ,  0x55 ,0x55}},  //  
#if ATD_SUPPORT_H_SYNDROME
{0x175,  {0x02 ,   0x02 ,  0x02 ,  0x02 ,  0x02 ,0x02}},  //  
#endif
{0x17A,  {0xD2 ,   0xD2 ,  0xD2 ,  0x2D ,  0x2D ,0xD2}},  //                                                                    
{0x17C,  {0x68 ,   0x68 ,  0x68 ,  0x68 ,  0x68 ,0x68}},  //                                                                    
{0x17D,  {0x37 ,   0x37 ,  0x37 ,  0x37 ,  0x37 ,0x37}},  //                                                                    
{0x17E,  {0x7F ,   0x7F ,  0x7F ,  0x7F ,  0x7F ,0x7F}},  //                                                                    
{0x180,  {0x08 ,   0x08 ,  0x08 ,  0xE8 ,  0xE8 ,0x08}},  //   
{0x183,  {0x20 ,   0x20 ,  0x20 ,  0x20 ,  0x20 ,0x20}},  // 
{0x184,  {0x9D ,   0x9D ,  0x9D ,  0x80 ,  0x80 ,0x9D}},  //                                                                    
{0x18A,  {0x28 ,   0x28 ,  0x28 ,  0x27 ,  0x27 ,0x28}},  //d20110330_Haibo:POA gain upper limit.Adjust from 0x20 to 0x28.For TCL electronic performance test audio noise                                                                   
#if ATD_SUPPORT_CR_ENLARGED_FIFO
{0x190,  {0x08 ,   0x08 ,  0x08 ,  0x08 ,  0x08 ,0x08}},  //  
#else
{0x190,  {0x0C ,   0x0C ,  0x0C ,  0x0C ,  0x0C ,0x0C}},  //         
#endif
{0x192,  {0x54 ,   0x54 ,  0x54 ,  0x3F ,  0x3F ,0x54}},  //                                                                    
{0x193,  {0x19 ,   0x19 ,  0x19 ,  0x19 ,  0x19 ,0x19}},  // PN thd: 0x17 for ()2 off// 0x19 for ()2 on                       
{0x194,  {0x50 ,   0x50 ,  0x50 ,  0x51 ,  0x51 ,0x50}},  // FN thd: 0x50 for ()2 off// 0x51 for ()2 on                       
{0x195,  {0x5F ,   0x5F ,  0x5F ,  0x5F ,  0x5F ,0x5F}},  //                                                                 
{0x196,  {0xDF ,   0xDF ,  0xDF ,  0xDF ,  0xDF ,0xDF}},  //                                                                 
{0x197,  {0xFD ,   0xFD ,  0xFD ,  0xFD ,  0xFD ,0xFD}},  // enable PN/FN auto re-config   d20110330_Haibo:For OVM estimation.Reset PJ
{0x198,  {0x36 ,   0x36 ,  0x36 ,  0x36 ,  0x36 ,0x36}},  // normal mode BW     d20110330_Haibo:6/6 setting                                             
{0x199,  {0x8C ,   0x8C ,  0x8C ,  0x8C ,  0x8C ,0x8C}},  //                                                                 
{0x1A9,  {0x46 ,   0x46 ,  0x46 ,  0x46 ,  0x46 ,0x46}},  // normal mode BW                                                  
{0x1AA,  {0xF8 ,   0xF8 ,  0xF8 ,  0xF8 ,  0xF8 ,0xF8}},  //                                                                 
{0x1B2,  {0x36 ,   0x36 ,  0x36 ,  0x36 ,  0x36 ,0x36}},  // normal mode BW  
{0x1B3,  {0x46 ,   0x46 ,  0x46 ,  0x46 ,  0x46 ,0x46}},  // normal mode BW   d20110330_Haibo:6/6 setting                                                                                                                                             
{0x1B4,  {0x27 ,   0x27 ,  0x27 ,  0x27 ,  0x27 ,0x27}},  // b0: use constant fifo delay   d20110330_Haibo:default null region change to 0x27
#if ATD_SUPPORT_CR_ENLARGED_FIFO
{0x1B5,  {0x46 ,   0x46,  0x46 ,  0x46 ,  0x46 ,0x46}},
#else
{0x1B5,  {0x8D ,   0x8D , 0x8D ,  0x8D ,  0x8D ,0x8D}},  // normal mode delay  d20110330_Haibo:6/6 setting      
#endif
{0x1B6,  {0x04 ,   0x04 ,  0x04 ,  0x84 ,  0x84 ,0x04}},  //                                                                 
{0x1B7,  {0x2C ,   0x2C ,  0x2C ,  0xA0 ,  0xA0 ,0x2C}},  // b2: Auto PJ on                                                   
{0x1B9,  {0x1C ,   0x1C ,  0x1C ,  0x1C ,  0x1C ,0x1C}},  // PN thd: 0x2C for ()2 off// 0x1C for ()2 on                        
{0x1BA,  {0x04 ,   0x04 ,  0x04 ,  0x06 ,  0x06 ,0x04}},  // b1: disable direct phase, b2: enable CR-reacq clear              
{0x1BB,  {0x30 ,   0x30 ,  0x30 ,  0x30 ,  0x30 ,0x30}},  //                                                                  
{0x1C2,  {0x94 ,   0x8A ,  0x88 ,  0x8A ,  0x8A ,0xAA}},  // d110327_Haibo:AVS setting.need to remove to ATD_SetSystemAudio.0x1c1 will be enable there                                                                 
{0x1C3,  {0xE8 ,   0x20 ,  0x60 ,  0x20 ,  0x20 ,0xE8}},  //                                                                    
{0x1C4,  {0x94 ,   0x14 ,  0x14 ,  0x14 ,  0x14 ,0x94}},  //                                                                    
{0x1C8,  {0x7F ,   0x7F ,  0x7F ,  0x7F ,  0x7F ,0x7F}},  // CR compensate CPO, for ECO version                               
{0x1C9,  {0x1F ,   0x1F ,  0x1F ,  0x1F ,  0x1F ,0x1F}},  // CR compensate CPO, for ECO version                               
{0x1CB,  {0x80 ,   0x80 ,  0x80 ,  0x80 ,  0x80 ,0x80}},  // CR compensate CPO, for ECO version                               
{0x1CF,  {0x66 ,   0x66 ,  0x66 ,  0x66 ,  0x66 ,0x66}},  //                                                                    
{0x1D6,  {0x01 ,   0x01 ,  0x01 ,  0x01 ,  0x01 ,0x01}},  //                                                                    
{0x1E1,  {0x67 ,   0x60 ,  0x67 ,  0x67 ,  0x67 ,0x67}},  // 
#if defined(CC_MT5399) || defined(CC_MT5881) || defined(CC_MT5890) || defined(CC_MT5882)
#if ATD_VDAC_CLK_108M
{0x1E2,  {0x71 ,   0x71 ,  0x71 ,  0x71 ,  0x71 ,0x71}},  // 
#else
{0x1E2,  {0x70 ,   0x70 ,  0x70 ,  0x70 ,  0x70 ,0x70}},  // 
#endif
#endif
#if ATD_SUPPORT_H_SYNDROME
{0x202,  {0x04 ,   0x04 ,  0x04 ,  0x04 ,  0x04 ,0x04}},
{0x203,  {0x47 ,   0x47 ,  0x47 ,  0x47 ,  0x47 ,0x47}},
#endif
{0x208,  {0x5C ,   0x5C ,  0x5C ,  0x5C ,  0x5C ,0x5C}},  //                                                                    
{0x214,  {0x17 ,   0x17 ,  0x17 ,  0x14 ,  0x14 ,0x17}},  //                                                                    
#if ATD_SUPPORT_H_BLANK_MODE//d110820_Haibo:Secam L/L1 H-blank mode
{0x21F,  {0x34 ,   0x34 ,  0x34 ,  0xF6 ,  0xF6 ,0x17}},  //    
#endif                                                                
{0x220,  {0x81 ,   0x81 ,  0x81 ,  0x81 ,  0x81 ,0x81}},  //                                                                    
{0x221,  {0xAD ,   0xD8 ,  0xDF ,  0xD8 ,  0xD8 ,0x55}},  //                                                                    
{0x234,  {0xA5 ,   0xA5 ,  0xA5 ,  0xA6 ,  0xA6 ,0xA5}},  //                                                                    
{0x235,  {0x12 ,   0x12 ,  0x12 ,  0x2D ,  0x2D ,0x12}},  //                                                                    
{0x23D,  {0x4F ,   0x4F ,  0x4F ,  0x14 ,  0x14 ,0x42}},  //                                                                    
{0x244,  {0x42 ,   0x42 ,  0x42 ,  0x37 ,  0x37 ,0x42}},  //                                                                    
//{0x245,  {0xDC ,   0xDC ,  0xDC ,  0xF4 ,  0xF4 ,0xDC}},  //                                                                    
#if ATD_SUPPORT_ENLARGED_SCALING_GAIN
#if defined(CC_MT5398) || defined(CC_MT5880)
{0x245,  {0xE0 ,   0xE1 ,  0xE1 ,  0xDC ,  0xDC ,0xE1}},  //
#elif defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882) //d20121126_hongji:update remy fine tune value from bo.xie
{0x245,  {0xE0 ,   0xE0 ,  0xE0 ,  0xE0 ,  0xE0 ,0xE0}},
#else          
{0x245,  {0xE0 ,   0xE0 ,  0xE0 ,  0xDF ,  0xDF ,0xE0}},  //																	
#endif																
#else                                                    
{0x245,  {0xDC ,   0xDC ,  0xDC ,  0xDF ,  0xDF ,0xDC}},  //
#endif	
#if defined(CC_MT5398) || defined(CC_MT5880) || defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
{0x248,  {0xC2 ,   0xC2 ,  0xC2 ,  0xB5 ,  0xB5 ,0xC2}},  //    
#else																
{0x248,  {0xC2 ,   0xC2 ,  0xC2 ,  0xB0 ,  0xB0 ,0xC2}},  //      
#endif                                                              
{0x24C,  {0xA3 ,   0xA3 ,  0xA3 ,  0xA3 ,  0xA3 ,0xA3}},  //                                                                    
{0x24D,  {0x80 ,   0x80 ,  0x80 ,  0x80 ,  0x80 ,0x80}},  //   
#if ATD_SUPPORT_H_SYNDROME
{0x24E,  {0x07 ,   0x07 ,  0x07 ,  0x07 ,  0x07 ,0x07}},
#endif
{0x254,  {0x0C ,   0x0C ,  0x0C ,  0x0C ,  0x0C ,0x0C}},  //                                                                    
{0x255,  {0x36 ,   0x36 ,  0x36 ,  0x18 ,  0x18 ,0x36}},  //                                                                    
{0x25E,  {0x84 ,   0x84 ,  0x84 ,  0x04 ,  0x04 ,0x84}},  // //b7: DPMR enable, ()2 on    
#if defined(CC_MT5389) 
#if  !fgEnable_CR_AVG_Mode
{0x258,  {0x01 ,   0x01 ,  0x01 ,  0x01 ,  0x01 ,0x01}},//d110627_Haibo:Always disable phase average mode
#else
{0x258,  {0x41 ,   0x41 ,  0x41 ,  0x41 ,  0x41 ,0x41}},//d110704_Haibo:Enable PE average on at non-PN condition
#endif
{0x269,  {0xF0 ,   0xF0 ,  0xF0 ,  0xF0 ,  0xF0 ,0xF0}},
#else
#if ATD_SUPPORT_PHASE_AVERAGE_MODE 
#if !fgEnable_CR_AVG_Mode
{0x269,  {0xF0 ,   0xF0 ,  0xF0 ,  0xF0 ,  0xF0 ,0xF0}},
#else
{0x269,  {0xF8 ,   0xF8 ,  0xF8 ,  0xF8 ,  0xF8 ,0xF8}},//d110704_Haibo:Enable PE average on at non-PN condition
#endif
#elif ATD_SUPPORT_CR_ENLARGED_FIFO
{0x269,  {0xF0 ,   0xF0 ,  0xF0 ,  0xF0 ,  0xF0 ,0xF0}},//d110704_Haibo:Select extent FIFO length.To avoid FIFO selection not set
#endif
#endif
#if ATD_SUPPORT_PHASE_AVERAGE_MODE
{0x26A,  {0x00 ,   0x00,   0x00 ,  0x00 ,  0x00 ,0x00}},
{0x26B,  {0x0D ,   0x0D,   0x0D ,  0x0D ,  0x0D ,0x0D}},
{0x26C,  {0x00 ,   0x00,   0x00 ,  0x00 ,  0x00 ,0x00}},
#endif
#if ATD_SUPPORT_OVM_SOUND_INDEPENDENT
{0x26A,  {0x30 ,   0x30,   0x30 ,  0x30 ,  0x30 ,0x30}},
{0x26F,  {0x7E ,   0x7E,   0x7E ,  0x7E ,  0x7E ,0x7E}},
#endif
{0x270,  {0x99 ,   0x99 ,  0x99 ,  0x99 ,  0x99 ,0x80}},  //   
{0x273,  {0xE1 ,   0xE1 ,  0xE1 ,  0xE1 ,  0xE1 ,0xE1}},  //d111013_Haibo:Reset LPF3 to default vaue(Enable)                                                                    
#if ATD_SUPPORT_H_BLANK_MODE//d110820_Haibo:Secam L/L1 H-blank mode
{0x274,  {0xcd ,   0xcd ,  0xcd ,  0x4d ,  0x4d ,0xcd}},  //    
{0x275,  {0x62 ,   0x62 ,  0x62 ,  0x59 ,  0x59 ,0x62}},  //    
{0x276,  {0x56 ,   0x56 ,  0x56 ,  0xae ,  0xae ,0x56}}, 
#else                                                               
{0x274,  {0xcd ,   0xcd ,  0xcd ,  0xcf ,  0xcf ,0xcd}},  //                                                                    
{0x275,  {0x62 ,   0x62 ,  0x62 ,  0xa2 ,  0xa2 ,0x62}},  //                                                                    
#endif    
#if ATD_SUPPORT_QUICK_MIDDLE_TERM                                                                                                                            
{0x277,  {0x58 ,   0x58 ,  0x58 ,  0x58 ,  0x58 ,0x58}},  //  d111116_Haibo:For Scaling out effected by VBI issue 
{0x27b,  {0x18 ,   0x18 ,  0x18 ,  0x18 ,  0x18 ,0x18}},  // 
#else
{0x277,  {0x42 ,   0x42 ,  0x42 ,  0x42 ,  0x42 ,0x37}},  //   
#endif
#if ATD_SUPPORT_H_SYNDROME
{0x27F,  {0x82 ,   0x82 ,  0x82 ,  0x82 ,  0x82 ,0x82}},
#endif
#if ATD_SUPPORT_NCR  //d20120114_hongji:NCR Setting
{0x2A0,  {0x01 ,   0x01,   0x01 ,  0x01 ,  0x01 ,0x01}},
{0x2A5,  {0xBF ,   0xBF,   0xBF ,  0xBF ,  0xBF ,0xBF}},
{0x2A7,  {0xC4 ,   0xC4,   0xC4 ,  0xC4 ,  0xC4 ,0xC4}},
#if defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
{0x2A8,  {0xA9 ,   0xA9,   0xA9 ,  0xA1 ,  0xA1 ,0xA9}},
{0x2AC,  {0x07 ,   0x07,   0x07 ,  0x07 ,  0x07 ,0x07}}, //d20121031_hongji:Enable FLL loop speed in tracking state
#else
{0x2A8,  {0xA1 ,   0xA1,   0xA1 ,  0xA1 ,  0xA1 ,0xA1}},
{0x2AC,  {0x18 ,   0x18,   0x18 ,  0x18 ,  0x18 ,0x18}},
#endif
{0x2AE,  {0x0A ,   0x0A,   0x0A ,  0x0A ,  0x0A ,0x0A}},
{0x2AF,  {0x5F ,   0x5F,   0x5F ,  0x5F ,  0x5F ,0x5F}},
{0x2B0,  {0x1B ,   0x1B,   0x1B ,  0x1B ,  0x1B ,0x1B}},
{0x2B1,  {0x1E ,   0x1E,   0x1E ,  0x1E ,  0x1E ,0x1E}},
{0x2B2,  {0x1D ,   0x1D,   0x1D ,  0x1D ,  0x1D ,0x1D}},
{0x2B3,  {0xF4 ,   0xF4,   0xF4 ,  0xF4 ,  0xF4 ,0xF4}},
{0x2B4,  {0x7D ,   0x7D,   0x7D ,  0x7D ,  0x7D ,0x7D}},
{0x2B5,  {0xE9 ,   0xE9,   0xE9 ,  0xE9 ,  0xE9 ,0xE9}}, //d20121031_hongji:Decimation factor is also 5 for Remy
{0x2B7,  {0xEC ,   0xEC,   0xEC ,  0xEC ,  0xEC ,0xEC}},
{0x2B8,  {0x14 ,   0x14,   0x14 ,  0x14 ,  0x14 ,0x14}},
{0x2B9,  {0x76 ,   0x76,   0x76 ,  0x76 ,  0x76 ,0x76}},  //d20121031_hongji:remy pll_cfo leakage follow cobra setting
{0x2BC,  {0x53 ,   0x53,   0x53 ,  0x52 ,  0x52 ,0x53}},
{0x2C0,  {0x00 ,   0x00,   0x00 ,  0x00 ,  0x00 ,0x00}},
{0x2C1,  {0x05 ,   0x05,   0x05 ,  0x00 ,  0x00 ,0x05}},
{0x2C5,  {0x50 ,   0x50,   0x50 ,  0x40 ,  0x40 ,0x50}},
#if  defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
{0x2CA,  {0x24 ,   0x24,   0x24 ,  0x24 ,  0x24 ,0x24}}, //d20120408_steven:Mustang new pilot filter for AWGN issue,PAL I sound  attenuation
#endif
#if defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
{0x2CD,  {0x44 ,   0x44,   0x44 ,  0x44 ,  0x44 ,0x44}},
#endif
#if defined(CC_MT5399) || defined(CC_MT5890)|| defined(CC_MT5882)
{0x2D0,  {0x0E ,   0x0E,   0x0E ,  0x0E ,  0x0E ,0x0E}},//d20130222_hongji:pilot filter option modify
#else
{0x2D0,  {0x0F ,   0x0F,   0x0F ,  0x0E ,  0x0E ,0x0F}},
#endif
{0x2D4,  {0xC2 ,   0xC2,   0xC2 ,  0xC2 ,  0xC2 ,0xC2}},
{0x2D5,  {0xFE ,   0xFE,   0xFE ,  0xFE ,  0xFE ,0xFE}},
{0x2DA,  {0x80 ,   0x80,   0x80 ,  0xF0 ,  0xF0 ,0x80}},//d20130812_steven:disable FPC Function
{0x2DC,  {0xB0 ,   0xB0,   0xB0 ,  0xB0 ,  0xB0 ,0xB0}},
{0x2DD,  {0x18 ,   0x18,   0x18 ,  0x18 ,  0x18 ,0x18}},
{0x2DE,  {0x10 ,   0x10,   0x10 ,  0x10 ,  0x10 ,0x10}},
#if defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
{0x2DF,  {0x56 ,   0x56,   0x56 ,  0x56 ,  0x56 ,0x56}},//d20121031_hongji:use min_in_channel_strength to disable fll cfo acc
#else
{0x2DF,  {0x54 ,   0x54,   0x54 ,  0x54 ,  0x54 ,0x54}},
#endif
#if ATD_SUPPORT_HW_AUTO_BW
{0x2E0,  {0x60 ,   0x60,   0x60 ,  0x20 ,  0x20 ,0x60}},  
{0x2E1,  {0x43 ,   0x43,   0x43 ,  0xC3 ,  0xC3 ,0x43}},  //d20120511_hongji:250ms for BW update
{0x2EC,  {0x53 ,   0x53,   0x53 ,  0x53 ,  0x53 ,0x53}},  
{0x2EE,  {0xFF ,   0xFF,   0xFF ,  0xFF ,  0xFF ,0xFF}},  
#endif
#if defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
#if defined(CC_MT5399) || defined(CC_MT5890)|| defined(CC_MT5882)
{0x2F1,  {0x0B ,   0x0B,   0x0B ,  0x0B ,  0x0B ,0x0B}},//d20130222_hongji:pilot filter option
{0x2F2,  {0x6A ,   0x6A,   0x6A ,  0x6A ,  0x6A ,0x6A}},//d20130222_hongji:new m_index scheme
#endif
{0x2F5,  {0x3B ,   0x3B,   0x3B ,  0xBB ,  0xBB ,0x3B}},  //d20130315_hongji:Set FN level step size to 66Khz,FLL CFO  freeze when cfo acc off for Q Lab L black line issue
{0x2F7,  {0x54 ,   0x54,   0x54 ,  0x54 ,  0x54 ,0x54}},
{0x2F9,  {0x1A ,   0x1A,   0x1A ,  0x1A ,  0x1A ,0x1A}},//d20121031_hongji:cfo on/off detection use in channel strength
{0x2FA,  {0xDD ,   0xDD,   0xDD ,  0xDD ,  0xDD ,0xDD}},//d20121031_hongji:perhaps need refine       i2c_signal_switch_off_threshold according ES status
{0x2FB,  {0x09 ,   0x09,   0x09 ,  0x09 ,  0x09 ,0x09}},//d20121121_hongji:modify m-index lower boundary to 50%
{0x2FC,  {0x58 ,   0x58,   0x58 ,  0x58 ,  0x58 ,0x58}},
#if defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)
{0x1F2,  {0x71 ,   0x71,   0x71 ,  0x71 ,  0x71 ,0x71}},//d20130222_hongji:pilot filter option
{0x1F4,  {0xC2 ,   0xC2,   0xC2 ,  0xC2 ,  0xC2 ,0xC6}},
{0x1F9,  {0x0F ,   0x0F,   0x0F ,  0x0F ,  0x0F ,0x0F}},
#endif
#endif
#endif
//===================================SLD part===========================   
{0x761,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}}, 
{0x761,  {0xF8 ,   0xF8 ,  0xF8 ,  0xF8 ,  0xF8 ,0xF8}},   //d10414_Haibo:Reset SLD part register since DVBT/C share the same SLD part    
{0x771,  {0x61 ,   0x61 ,  0x61 ,  0x61 ,  0x61 ,0x61}},  
#if defined(CC_MT5890)
{0x780,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}},   //d20140409_steven:oryx ADC input data format is 2's complement
#else  
{0x780,  {0x01 ,   0x01 ,  0x01 ,  0x01 ,  0x01 ,0x01}},    
#endif                                               
{0x782,  {0x10 ,   0x10 ,  0x10 ,  0x10 ,  0x10 ,0x10}},  // d110327_Haibo:What the meaning of register bank 0xFxx                                                                   
{0x783,  {0x20 ,   0x20 ,  0x20 ,  0x20 ,  0x20 ,0x20}},  //  
#if defined(CC_MT5890) || defined(CC_MT5882)
{0x786,  {0x80 ,   0x80 ,  0x80 ,  0x00 ,  0x00 ,0x80}},  // d20140409_steven:oryx design change---enable dsm4  over flow design change  
#endif                                                                 
{0x787,  {0x1A ,   0x1A ,  0x1A ,  0x20 ,  0x20 ,0x1A}},  //                                                                    
{0x790,  {0x48 ,   0x48 ,  0x48 ,  0xc8 ,  0xc8 ,0x48}},  //                                                                    
{0x791,  {0x40 ,   0x40 ,  0x40 ,  0x45 ,  0x45 ,0x40}},  //                                                                    
{0x793,  {0x04 ,   0x04 ,  0x04 ,  0x42 ,  0x42 ,0x04}},  //                                                                    
{0x794,  {0x38 ,   0x38 ,  0x38 ,  0x02 ,  0x02 ,0x38}},  //d110527, as Jostain advice     
#if defined(CC_MT5890) 
{0x796,  {0x88 ,   0x88 ,  0x88 ,  0x88 ,  0x88 ,0x88}},  // d20140516_steven:disable compensation of PGA gain difference,because have not pga control after Oyrx generation
#endif                                                              
{0x797,  {0x22 ,   0x22 ,  0x22 ,  0x22 ,  0x22 ,0x22}},  //                                                                    
{0x79a,  {0x7a ,   0x7a ,  0x7a ,  0x7a ,  0x7a ,0x7a}},  //                                                                    
{0x79c,  {0x21 ,   0x21 ,  0x21 ,  0x11 ,  0x11 ,0x21}},  //                                                                    
{0x79d,  {0x1c ,   0x1c ,  0x1c ,  0x0a ,  0x0a ,0x1c}},  //                                                                                     
{0x7a4,  {0x38 ,   0x38 ,  0x38 ,  0x01 ,  0x01 ,0x38}},  //   DAGC Lower target   d110328_Haibo: As LW said,DAGC lower target should be  0x47 to avoid pilot power too small                                                              
{0x7a5,  {0xC0 ,   0xC0 ,  0xC0 ,  0x40 ,  0x40 ,0xC0}},  //                                                                    
{0x7b0,  {0x28 ,   0x28 ,  0x28 ,  0x28 ,  0x28 ,0x28}},  //                                                                    
{0x7b1,  {0x21 ,   0x21 ,  0x21 ,  0x10 ,  0x10 ,0x21}},  //                                                                    
{0x7b2,  {0x03 ,   0x03 ,  0x03 ,  0x87 ,  0x87 ,0x03}},  //                                                                    
{0x7b3,  {0x60 ,   0x60 ,  0x60 ,  0x00 ,  0x00 ,0x60}},  //                                                                    
{0x7b5,  {0x40 ,   0x40 ,  0x40 ,  0x40 ,  0x40 ,0x40}},  //                                                                    
{0x7b6,  {0x5D ,   0x5D ,  0x5D ,  0x6D ,  0x6D ,0x5D}},  //                                                                    
{0x7b7,  {0x15 ,   0x15 ,  0x15 ,  0x10 ,  0x10 ,0x15}},  //                                                                    
{0x7b8,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}},  //                                                                    
{0x7b9,  {0x11 ,   0x11 ,  0x11 ,  0x0c ,  0x0c ,0x11}},  //                                                                    
{0x7bd,  {0x23 ,   0x23 ,  0x23 ,  0x2d ,  0x2d ,0x23}},  //                                                                    
{0x7be,  {0x19 ,   0x19 ,  0x19 ,  0x23 ,  0x23 ,0x19}},  //                                                                    
{0x7bf,  {0x14 ,   0x14 ,  0x14 ,  0x1e ,  0x1e ,0x14}},  //                                                                    
{0x7c0,  {0x7f ,   0x7f ,  0x7f ,  0x7a ,  0x7a ,0x7f}},  // //PRA SAT                                                          
{0x7c2,  {0x21 ,   0x21 ,  0x21 ,  0x30 ,  0x30 ,0x21}},  //                                                                    
{0x7c3,  {0x34 ,   0x34 ,  0x34 ,  0x0a ,  0x0a ,0x34}},  //                                                                    
{0x7c9,  {0x23 ,   0x23 ,  0x23 ,  0x12 ,  0x12 ,0x23}},                                                                                                                                   
{0x7cb,  {0x03 ,   0x03 ,  0x03 ,  0x10 ,  0x10 ,0x03}},  //                                                                    
{0x7cc,  {0x14 ,   0x14 ,  0x14 ,  0x3f ,  0x3f ,0x14}},  //            
{0x7e1,  {0xd4 ,   0xd4 ,  0xd4 ,  0x34 ,  0x34 ,0xd4}},  //                                                                    
{0x7e3,  {0x6b ,   0x6b ,  0x6b ,  0x20 ,  0x20 ,0x6b}},  //                                                                    
{0x7fb,  {0x05 ,   0x05 ,  0x05 ,  0x02 ,  0x02 ,0x05}},  //       
#if defined(CC_MT5398) || defined(CC_MT5880) || defined(CC_MT5881)|| defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882) //d20120217_hongji:for Cobra ATD Spur issue
//Reg      B/G     D/K     I       L       L'     M/N'     
{0x720,  {0x6B ,   0x6B,   0x6B ,  0xEB ,  0xEB ,0x6B}},
#if defined(CC_MT5399) || defined(CC_MT5890) || defined(CC_MT5882)//d20130130_wenming: Sync the CR DTV00475553 solution(CL:1211500) 
{0x724,  {0x30 ,   0x30,   0x30 ,  0x13 ,  0x13 ,0x28}},
{0x734,  {0x30 ,   0x30,   0x30 ,  0x13 ,  0x13 ,0x28}},
#else
{0x724,  {0x30 ,   0x30,   0x30 ,  0x13 ,  0x13 ,0x30}},
{0x734,  {0x30 ,   0x30,   0x30 ,  0x13 ,  0x13 ,0x30}},
#endif
{0x722,  {0x5D ,   0x5D,   0x5D ,  0x7F ,  0x7F ,0x5D}},
{0x727,  {0x14 ,   0x14,   0x14 ,  0x34 ,  0x34 ,0x14}},
{0x72a,  {0x30 ,   0x30,   0x30 ,  0xfa ,  0xfa ,0x30}},    
#endif

#if ATD_SUPPORT_EQ_3TAP_AUTO
{0x201,  {0x40 ,   0x40 ,  0x40 ,  0x06 ,  0x06 ,0x40}},  //  
{0x176,  {0x05 ,   0x05 ,  0x05 ,  0x01 ,  0x01 ,0x04}},  //	
{0x177,  {0x8B ,   0x8B ,  0x8B ,  0x92 ,  0x92 ,0x31}},  //	
{0x178,  {0x05 ,   0x05 ,  0x05 ,  0x01 ,  0x01 ,0x03}},  //	
{0x179,  {0x20 ,   0x20 ,  0x20 ,  0x6A ,  0x6A ,0xE1}},  //	
{0x206,  {0x0A ,   0x0A ,  0x0A ,  0x0A ,  0x0A ,0x0A}},  //	
{0x207,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}},  //	
{0x12c,  {0x8B ,   0x8B ,  0x8B ,  0x8B ,  0x8B ,0x8B}},  //	
{0x240,  {0x21 ,   0x21 ,  0x21 ,  0x21 ,  0x21 ,0xA1}},  //	
{0x17f,  {0x51 ,   0x51 ,  0x51 ,  0x51 ,  0x51 ,0x51}},  //	
#endif
#if ATD_SUPPORT_AGCSPEED
{0x164,  {0x04 ,   0x04 ,  0x04 ,  0x06 ,  0x06 ,0x04}},  //	
{0x165,  {0x89 ,   0x89 ,  0x89 ,  0x89 ,  0x89 ,0x89}},  //	
{0x168,  {0x05 ,   0x05 ,  0x05 ,  0x05 ,  0x05 ,0x05}},  //	
{0x169,  {0x10 ,   0x10 ,  0x10 ,  0x10 ,  0x10 ,0x07}},  //	
{0x173,  {0x02 ,   0x02 ,  0x02 ,  0x02 ,  0x02 ,0x02}},  //	
{0x21B,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0xFA}},  //	
{0x236,  {0x71 ,   0x71 ,  0x71 ,  0x71 ,  0x71 ,0x41}},  //	
{0x273,  {0xe1 ,   0xe1 ,  0xe1 ,  0xe1 ,  0xe1 ,0xe1}},  //	
#endif

#if ATD_SUPPORT_VSI  //d20120114_hongji:VSI setting
{0x24D,  {0x01 ,   0x01 ,  0x01 ,  0x01 ,  0x01 ,0x01}},  //	
{0x24E,  {0x50 ,   0x50 ,  0x50 ,  0x50 ,  0x50 ,0x50}},  //	
{0x270,  {0x99 ,   0x99 ,  0x99 ,  0x99 ,  0x99 ,0x81}},  //	
{0x140,  {0x70 ,   0x70 ,  0x70 ,  0x70 ,  0x70 ,0x0c}},  //	
{0x141,  {0xba ,   0xba ,  0xba ,  0xba ,  0xba ,0xba}},  //	
{0x142,  {0x20 ,   0x20 ,  0x20 ,  0x20 ,  0x20 ,0x20}},  //	
{0x143,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}},  //	
{0x144,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}},  //	
#endif

#endif
};

#if defined(CC_MT5396)
ATD_REG_T ATD_SetSystem_96ECO_Reg[] =
{
{0x26A,  {0x60 ,   0x60,   0x60 ,  0x60 ,  0x60 ,0x60}},//d110922_Haibo:If not support sound filter before OVM
{0x26F,  {0xE2 ,   0xE2,   0xE2 ,  0xE2 ,  0xE2 ,0xE2}},   
{0x269,  {0x70 ,   0x70 ,  0x70 ,  0x70 ,  0x70 ,0x70}},//d110922_Haibo:If not support CR phase average mode
{0x26A,  {0x60 ,   0x60,   0x60 ,  0x60 ,  0x60 ,0x60}},
{0x26B,  {0x00 ,   0x00,   0x00 ,  0x00 ,  0x00 ,0x00}},
{0x26C,  {0x00 ,   0x00,   0x00 ,  0x00 ,  0x00 ,0x00}},
{0x190,  {0x0C ,   0x0C ,  0x0C ,  0x0C ,  0x0C ,0x0C}},//d110922_Haibo:If not support enlarged CR FIFO         
{0x1B5,  {0x8D ,   0x8D ,  0x8D ,  0x8D ,  0x8D ,0x8D}},
#if defined(DTD_INCLUDE)
{0x168,  {0x00 ,   0x00 ,  0x00 ,  0x00 ,  0x00 ,0x00}},//d110922_Haibo: bypass DRO fifo delay before ECO IC
{0x169,  {0x00,    0x00 ,  0x00,   0x00,   0x00, 0x00}}, 
#endif   
{0x164,  {0x14 ,   0x14 ,  0x14 ,  0xD4 ,  0xD4 ,0x04}},//d110922_Haibo:  if not support  H-blank mode                                                                 
{0x165,  {0x89 ,   0x89 ,  0x89 ,  0xCD ,  0xCD ,0x89}},
{0x166,  {0x36 ,   0x36 ,  0x36 ,  0x01 ,  0x01 ,0x36}},                                                                 
{0x167,  {0x9D ,   0x9D ,  0x9D ,  0xD4 ,  0xD4 ,0x9D}},
{0x21F,  {0x34 ,   0x34 ,  0x34 ,  0x34 ,  0x34 ,0x34}},
{0x274,  {0xcd ,   0xcd ,  0xcd ,  0xcf ,  0xcf ,0xcd}},  //                                                                    
{0x275,  {0x62 ,   0x62 ,  0x62 ,  0xa2 ,  0xa2 ,0x62}},  //    
{0x276,  {0x56 ,   0x56 ,  0x56 ,  0x56 ,  0x56 ,0x56}},  
{0x277,  {0x42 ,   0x42 ,  0x42 ,  0x42 ,  0x42 ,0x37}}  
};
#endif

//d20120114_hongji:MT5398 New feature setting
#if ATD_SUPPORT_CHF   //d20120114_hongji:channel filter setting
//6M channel filter setting
ATD_REG CHF_6M[]=
{
    {0x710, 0xDF},
    {0x711, 0x00},
    {0x712, 0x26},
    {0x713, 0x08},
    {0x714, 0x27},
    {0x715, 0x01},
    {0x716, 0x7E},
    {0x717, 0x35},
    {0x711, 0x01},
    {0x712, 0x16},
    {0x713, 0x18},
    {0x714, 0x06},
    {0x715, 0xDA},
    {0x716, 0x63},
    {0x717, 0x0D},
    {0x711, 0x02},
    {0x712, 0x30},
    {0x713, 0x56},
    {0x714, 0x07},
    {0x715, 0xE4},
    {0x716, 0x40},
    {0x717, 0x8E},
    {0x711, 0x03},
    {0x712, 0x6A},
    {0x713, 0x56},
    {0x714, 0x1A},
    {0x715, 0x0E},
    {0x716, 0x1D},
    {0x717, 0x06},
    {0x711, 0x04},
    {0x712, 0x69},
    {0x713, 0x74},
    {0x714, 0x26},
    {0x715, 0xE8},
    {0x716, 0xFF},
    {0x717, 0x88},   
    {0x718, 0x00},
    {0x719, 0x62},
    {0x71A, 0x0D},
    {0x71B, 0x96},
    {0x71C, 0x02},
    {0x705, 0x00},
    {0x718, 0x01},
    {0x719, 0x62},
    {0x71A, 0x0D},
    {0x71B, 0x9C},
    {0x71C, 0x07},
    {0x705, 0x00},
    {0x718, 0x02},
    {0x719, 0x62},
    {0x71A, 0x0D},
    {0x71B, 0x91},
    {0x71C, 0x1D},
    {0x705, 0x00},
    {0x718, 0x03},
    {0x719, 0x62},
    {0x71A, 0x0D},
    {0x71B, 0x8F},
    {0x71C, 0x19},
    {0x705, 0x00},
    {0x718, 0x04},
    {0x719, 0x62},
    {0x71A, 0x0E},
    {0x71B, 0xA4},
    {0x71C, 0x07},
    {0x705, 0x00},
    {0x718, 0x05},
    {0x719, 0x62},
    {0x71A, 0x0F},
    {0x71B, 0xAD},
    {0x71C, 0x1D},
    {0x705, 0x00},
    {0x718, 0x06},
    {0x719, 0x63},
    {0x71A, 0x01},
    {0x71B, 0xB9},
    {0x71C, 0x01},
    {0x705, 0x00},
    {0x718, 0x07},
    {0x719, 0x63},
    {0x71A, 0x06},
    {0x71B, 0xC5},
    {0x71C, 0x0C},
    {0x705, 0x00},
    {0x718, 0x08},
    {0x719, 0x64},
    {0x71A, 0x00},
    {0x71B, 0xD2},
    {0x71C, 0x12},
    {0x705, 0x00},
    {0x718, 0x09},
    {0x719, 0x67},
    {0x71A, 0x01},
    {0x71B, 0xE0},
    {0x71C, 0x02},
    {0x705, 0x00},
    {0x71D, 0xFF},
    {0x705, 0x0F},
    //{0x7a9, 0x87},//d20120208_hongji:don't include DC Setting in CHF Function
    //{0x7aa, 0x81},
    //{0x298, 0x00},
    //{0x299, 0x84},
    //{0x29a, 0xBD},
    //{0x29b, 0xA1},
    //{0x29e, 0x03}, 
    {0x0,0x0},//end flag
};
//7M Channel filter setting
ATD_REG CHF_7M[] =
{
    {0x710, 0xDF},
    {0x711, 0x00},
    {0x712, 0x2E},
    {0x713, 0x09},
    {0x714, 0x37},
    {0x715, 0x11},
    {0x716, 0x7E},
    {0x717, 0x7C},
    {0x711, 0x01},
    {0x712, 0x1B},
    {0x713, 0x16},
    {0x714, 0x18},
    {0x715, 0xE9},
    {0x716, 0x6A},
    {0x717, 0xB8},
    {0x711, 0x02},
    {0x712, 0x3A},
    {0x713, 0x49},
    {0x714, 0x3B},
    {0x715, 0xFB},
    {0x716, 0x55},
    {0x717, 0x9F},
    {0x711, 0x03},
    {0x712, 0x6B},
    {0x713, 0x53},
    {0x714, 0x2B},
    {0x715, 0x25},
    {0x716, 0x2B},
    {0x717, 0xC3},
    {0x711, 0x04},
    {0x712, 0x6C},
    {0x713, 0x74},
    {0x714, 0x24},
    {0x715, 0x04},
    {0x716, 0x1C},
    {0x717, 0x5D},
    {0x718, 0x00},
    {0x719, 0x5F},
    {0x71A, 0x01},
    {0x71B, 0x98},
    {0x71C, 0x1C},
    {0x705, 0x00},
    {0x718, 0x01},
    {0x719, 0x5F},
    {0x71A, 0x01},
    {0x71B, 0x94},
    {0x71C, 0x09},
    {0x705, 0x00},
    {0x718, 0x02},
    {0x719, 0x5F},
    {0x71A, 0x01},
    {0x71B, 0x91},
    {0x71C, 0x1F},
    {0x705, 0x00},
    {0x718, 0x03},
    {0x719, 0x5F},
    {0x71A, 0x01},
    {0x71B, 0x9F},
    {0x71C, 0x15},
    {0x705, 0x00},
    {0x718, 0x04},
    {0x719, 0x5F},
    {0x71A, 0x02},
    {0x71B, 0xA8},
    {0x71C, 0x0E},
    {0x705, 0x00},
    {0x718, 0x05},
    {0x719, 0x5F},
    {0x71A, 0x02},
    {0x71B, 0xB3},
    {0x71C, 0x02},
    {0x705, 0x00},
    {0x718, 0x06},
    {0x719, 0x5F},
    {0x71A, 0x04},
    {0x71B, 0xBF},
    {0x71C, 0x08},
    {0x705, 0x00},
    {0x718, 0x07},
    {0x719, 0x5F},
    {0x71A, 0x07},
    {0x71B, 0xCC},
    {0x71C, 0x16},
    {0x705, 0x00},
    {0x718, 0x08},
    {0x719, 0x5F},
    {0x71A, 0x0D},
    {0x71B, 0xDB},
    {0x71C, 0x02},
    {0x705, 0x00},
    {0x718, 0x09},
    {0x719, 0x60},
    {0x71A, 0x0A},
    {0x71B, 0xEA},
    {0x71C, 0x00},
    {0x705, 0x00},
    {0x718, 0x0A},
    {0x719, 0x64},
    {0x71A, 0x03},
    {0x71B, 0xF9},
    {0x71C, 0x09},
    {0x705, 0x00},
    {0x71D, 0xFF},
    {0x705, 0x1F},
    //{0x7a9, 0x87},//d20120208_hongji:don't include DC Setting in CHF Function
    //{0x7aa, 0x6E},
    //{0x298, 0x00},
    //{0x299, 0xAA},
    //{0x29a, 0xAA},
    //{0x29b, 0xAB},
    //{0x29e, 0x03},   
    {0x0,0x0},//end flag
}; 
//8M Channel filter setting
ATD_REG CHF_8M[] =
{
    {0x710, 0xDF},
    {0x711, 0x00},
    {0x712, 0x21},
    {0x713, 0x16},
    {0x714, 0x00},
    {0x715, 0xF9},
    {0x716, 0x7F},
    {0x717, 0xAB},
    {0x711, 0x01},
    {0x712, 0x39},
    {0x713, 0x13},
    {0x714, 0x26},
    {0x715, 0x22},
    {0x716, 0x7B},
    {0x717, 0x34},
    {0x711, 0x02},
    {0x712, 0x44},
    {0x713, 0x4C},
    {0x714, 0x3B},
    {0x715, 0x13},
    {0x716, 0x6B},
    {0x717, 0x66},
    {0x711, 0x03},
    {0x712, 0x6C},
    {0x713, 0x5F},
    {0x714, 0x0C},
    {0x715, 0x3B},
    {0x716, 0x47},
    {0x717, 0x5C},
    {0x711, 0x04},
    {0x712, 0x6F},
    {0x713, 0x74},
    {0x714, 0x25},
    {0x715, 0x21},
    {0x716, 0x35},
    {0x717, 0x2D},
    {0x718, 0x00},
    {0x719, 0x5D},
    {0x71A, 0x0C},
    {0x71B, 0xA4},
    {0x71C, 0x0B},
    {0x705, 0x00},
    {0x718, 0x01},
    {0x719, 0x5D},
    {0x71A, 0x0C},
    {0x71B, 0xAF},
    {0x71C, 0x10},
    {0x705, 0x00},
    {0x718, 0x02},
    {0x719, 0x5D},
    {0x71A, 0x0C},
    {0x71B, 0x9B},
    {0x71C, 0x16},
    {0x705, 0x00},
    {0x718, 0x03},
    {0x719, 0x5D},
    {0x71A, 0x0C},
    {0x71B, 0x95},
    {0x71C, 0x1A},
    {0x705, 0x00},
    {0x718, 0x04},
    {0x719, 0x5D},
    {0x71A, 0x0C},
    {0x71B, 0x92},
    {0x71C, 0x1A},
    {0x705, 0x00},
    {0x718, 0x05},
    {0x719, 0x5D},
    {0x71A, 0x0C},
    {0x71B, 0xBC},
    {0x71C, 0x1B},
    {0x705, 0x00},
    {0x718, 0x06},
    {0x719, 0x5D},
    {0x71A, 0x0D},
    {0x71B, 0xCC},
    {0x71C, 0x00},
    {0x705, 0x00},
    {0x718, 0x07},
    {0x719, 0x5E},
    {0x71A, 0x00},
    {0x71B, 0xDC},
    {0x71C, 0x11},
    {0x705, 0x00},
    {0x718, 0x08},
    {0x719, 0x5E},
    {0x71A, 0x04},
    {0x71B, 0xED},
    {0x71C, 0x1D},
    {0x705, 0x00},
    {0x718, 0x09},
    {0x719, 0x5E},
    {0x71A, 0x0E},
    {0x71B, 0xFF},
    {0x71C, 0x14},
    {0x705, 0x00},
    {0x718, 0x0A},
    {0x719, 0x61},
    {0x71A, 0x0C},
    {0x71B, 0x11},
    {0x71C, 0x17},
    {0x705, 0x00},
    {0x71D, 0xFF},
    {0x705, 0x1F},
    //{0x7a9, 0x87},//d20120208_hongji:don't include DC Setting in CHF Function
    //{0x7aa, 0x5B},
    //{0x298, 0x00},
    //{0x299, 0xD0},
    //{0x29a, 0x97},
    //{0x29b, 0xB4},
    //{0x29e, 0x03},
    {0x0,0x0},//end flag
};
#endif

#endif
